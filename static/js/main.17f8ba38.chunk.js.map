{"version":3,"sources":["components/SocialProfile/SocialProfile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/SocialProfile/SocialProfile.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","css","profile","description","src","alt","width","item","label","quantity","followers","views","likes","Statistics","title","statistics","statList","map","id","percentage","style","backgroundColor","Math","floor","random","toString","FriendListItem","isOnline","status","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","tableHead","head","tableBody","type","amount","currency","tableData","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17f8ba38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"SocialProfile_profile__2Ctfv\",\"description\":\"SocialProfile_description__3UVLP\",\"avatar\":\"SocialProfile_avatar__nsE_G\",\"name\":\"SocialProfile_name__3wnOe\",\"tag\":\"SocialProfile_tag__lePAX\",\"location\":\"SocialProfile_location__1kiO9\",\"stats\":\"SocialProfile_stats__2RMQL\",\"item\":\"SocialProfile_item__10TbM\",\"label\":\"SocialProfile_label__2R73S\",\"quantity\":\"SocialProfile_quantity__2lv-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1-Q6J\",\"tableHead\":\"TransactionHistory_tableHead__2x7uT\",\"tableBody\":\"TransactionHistory_tableBody__3J8po\",\"head\":\"TransactionHistory_head__nLfxm\",\"tableData\":\"TransactionHistory_tableData__38D6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__8ySBO\",\"title\":\"Statistics_title__3FpSm\",\"statList\":\"Statistics_statList__u9UXb\",\"item\":\"Statistics_item__1ZWig\",\"label\":\"Statistics_label__2oxhi\",\"percentage\":\"Statistics_percentage__2IbP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1hDDz\",\"status\":\"FriendListItem_status__b0KsJ\",\"name\":\"FriendListItem_name__2aw7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2n6_o\"};","import PropTypes from 'prop-types';\r\nimport css from 'components/SocialProfile/SocialProfile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={css.profile}>\r\n      <div className={css.description}>\r\n        <img\r\n          src={avatar}\r\n          alt=\"Аватар пользователя\"\r\n          className={css.avatar}\r\n          width=\"100\"\r\n        />\r\n        <p className={css.name}>{name}</p>\r\n        <p className={css.tag}>@{tag}</p>\r\n        <p className={css.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={css.stats}>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Followers</span>\r\n          <span className={css.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Views</span>\r\n          <span className={css.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={css.item}>\r\n          <span className={css.label}>Likes</span>\r\n          <span className={css.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\nimport css from 'components/Statistics/Statistics.module.css';\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nconst Statistics = ({ title = 'Upload stats', stats }) => {\n  return (\n    <section className={css.statistics}>\n      {title && <h2 className={css.title}>{title}</h2>}\n      <ul className={css.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={css.item}\n            key={id}\n            style={{ backgroundColor: getRandomHexColor() }}\n          >\n            <span className={css.label}>{label}</span>\n            <span className={css.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport css from 'components/FriendListItem/FriendListItem.module.css';\n\nconst FriendListItem = ({ avatar, isOnline, name }) => {\n  return (\n    <li className={css.item}>\n      <span\n        className={css.status}\n        style={{ backgroundColor: isOnline ? 'green' : 'red' }}\n      ></span>\n      <img className={css.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={css.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport css from 'components/FriendList/FriendList.module.css';\nimport FriendListItem from 'components/FriendListItem/FriendListItem';\n\nconst FriendList = ({ friends }) => {\n  return (\n    <ul className={css.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport css from 'components/TransactionHistory/TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={css.transactionHistory}>\n      <thead className={css.tableHead}>\n        <tr>\n          <th className={css.head}>Type</th>\n          <th className={css.head}>Amount</th>\n          <th className={css.head}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody className={css.tableBody}>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td className={css.tableData}>{type}</td>\n            <td className={css.tableData}>{amount}</td>\n            <td className={css.tableData}>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default TransactionHistory;\n","import user from 'data/user.json';\nimport Profile from 'components/SocialProfile/SocialProfile';\nimport statisticalData from 'data/statistical-data.json';\nimport Statistics from 'components/Statistics/Statistics';\nimport friends from 'data/friends.json';\nimport FriendList from 'components/FriendList/FriendList';\nimport transactions from 'data/transactions.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from 'components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// // If you want to start measuring performance in your app, pass a function\r\n// // to log results (for example: reportWebVitals(console.log))\r\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}